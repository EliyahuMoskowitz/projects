{"version":3,"sources":["Header.js","TickerInput.js","Update.js","StockInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","TickerInput","intervalId","useState","symbol","setSymbol","companies","setCompanies","a","length","fetch","r","ok","Error","status","statusText","json","info","console","id","list","placeholder","value","onChange","t","target","map","c","ticker","to","Update","api_key","setInfo","useEffect","getStockInfo","update","clearInterval","setInterval","log","oldPrice","last_price","price","open_price","date","Date","toLocaleDateString","time","toLocaleTimeString","arrow","colorPrice","style","color","StockInfo","stockInfo","setStockInfo","useParams","name","desc","short_description","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab50f8dc.chunk.js","sourcesContent":["import React from 'react';\r\nfunction Header(){\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <h1> Stock-Ticker </h1>\r\n        </header>\r\n    );\r\n  }\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TickerInput.css';\r\n\r\nfunction TickerInput () {\r\n    const api_key = 'OmZjY2QyNmJjMzBmYzE0YTk0YmE3NjJhNjAyYTExNmUy';\r\n    const [symbol, setSymbol] = useState('');\r\n    const [companies, setCompanies] = useState([]);\r\n\r\n    (async function getCompanies(){\r\n        if(!companies.length > 0){\r\n                try{\r\n                const r = await fetch(`https://api-v2.intrinio.com/companies?has_stock_prices=true&api_key=${api_key}`);\r\n                if(!r.ok){\r\n                    throw new Error(`Woops! Something went wrong :( ${r.status}: ${r.statusText}`);\r\n                }\r\n                const info = await r.json();\r\n                setCompanies(info.companies);\r\n                }catch(err){\r\n                console.info(err);\r\n                }\r\n            }\r\n        })()\r\n\r\n        return (\r\n            <aside>\r\n                <label id=\"enterSymbol\">\r\n                    Enter Stock-Ticker Symbol\r\n                    <input id=\"symbolInput\" list=\"comp\" placeholder=\"click to see list of companies\" value={symbol} onChange={({target: t}) => setSymbol(t.value)}/>\r\n                </label>\r\n                <datalist id=\"comp\" >\r\n                    {companies.map(c => <option key={c.id} value={/*`${c.ticker} - ${c.name}`*/c.ticker} />)}\r\n                </datalist>\r\n                <Link to={`/stock/${symbol}`} >UPDATE</Link>\r\n            </aside>\r\n        );\r\n    }\r\n\r\nexport default TickerInput; ","import React, {useState, useEffect} from 'react';\r\n\r\n// let oldPrice;\r\nlet intervalId;\r\n\r\nfunction Update({symbol}) {\r\n    const api_key = 'OmZjY2QyNmJjMzBmYzE0YTk0YmE3NjJhNjAyYTExNmUy';\r\n    let [info, setInfo] = useState({});\r\n    // oldPrice = info.last_price;\r\n    // let [oldPrice, setOldPrice] = useState(info.last_price);\r\n\r\n    useEffect(() => {\r\n        async function getStockInfo(){\r\n            if(symbol){\r\n                // oldPrice = info.last_price;\r\n                try{\r\n                // setOldPrice(info.last_price);\r\n                // oldPrice = info.last_price;\r\n                const r = await fetch(`https://api-v2.intrinio.com/securities/${symbol}/prices/realtime?api_key=${api_key}`);\r\n                if(!r.ok){\r\n                    throw new Error(`Woops! Something went wrong :( ${r.status}: ${r.statusText}`);\r\n                }\r\n                const update = await r.json();\r\n                setInfo(update);\r\n                }catch(err){\r\n                console.info(err);\r\n                }\r\n            }\r\n        }\r\n        getStockInfo();\r\n        intervalId && clearInterval(intervalId);\r\n        intervalId = setInterval(() => {\r\n            console.log('calling ... ');\r\n            getStockInfo();\r\n        }, 5000);\r\n        // eslint-disable-next-line\r\n    }, [symbol/*, info*/])\r\n\r\n    const {last_price: oldPrice, open_price: price/*, updated_on: updated*/} = info;\r\n    const date = new Date().toLocaleDateString();\r\n    const time = new Date().toLocaleTimeString();\r\n    // const arrow = price > oldPrice ? '&uarr;' : '&darr;';\r\n    const arrow = price >= oldPrice ? \"\\u2191\" : \"\\u2193\"; \r\n    const colorPrice = price >= oldPrice ? 'green' : 'red';\r\n\r\n// html entities  &uarr; (up), &darr;  (down)\r\n    return (\r\n        <h2>\r\n            <span style={{color: colorPrice}}>${price || oldPrice}{arrow}</span>\r\n            <span> &nbsp; Last Updated: {date /*updated*/} &nbsp; {time}</span>\r\n        </h2>\r\n    );\r\n}\r\n\r\nexport default Update;","import React, { useState, useEffect } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport Update from './Update';\r\nimport './StockInfo.css';\r\n\r\nfunction StockInfo () {\r\n    const api_key = 'OmZjY2QyNmJjMzBmYzE0YTk0YmE3NjJhNjAyYTExNmUy';\r\n    let [stockInfo, setStockInfo] = useState({});\r\n    let {symbol} = useParams();\r\n\r\n    useEffect(() => {\r\n        (async function getStockInfo(){\r\n            if(symbol){\r\n                try{\r\n                const r = await fetch(`https://api-v2.intrinio.com/companies/${symbol}?api_key=${api_key}`);\r\n                if(!r.ok){\r\n                    throw new Error(`Woops! Something went wrong :( ${r.status}: ${r.statusText}`);\r\n                }\r\n                const info = await r.json();\r\n                setStockInfo(info);\r\n                }catch(err){\r\n                console.info(err);\r\n                }\r\n            }\r\n        })();\r\n    }, [symbol])\r\n\r\n    const {ticker, name, short_description: desc} = stockInfo;\r\n        return (\r\n            <div id=\"compInfo\" >\r\n                <h1>{ticker} - {name}</h1>\r\n                <p>{desc}</p>\r\n                <Update symbol={symbol} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default StockInfo;","import './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Header from './Header';\nimport TickerInput from './TickerInput';\nimport StockInfo from './StockInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <BrowserRouter>\n        <TickerInput />  \n        <Route path=\"/stock/:symbol\" >\n          <StockInfo />\n        </Route>\n      </BrowserRouter>\n    </div>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}